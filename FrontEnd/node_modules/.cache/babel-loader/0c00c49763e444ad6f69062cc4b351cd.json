{"ast":null,"code":"import _objectSpread from\"D:\\\\MERN-APP\\\\firstapp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";import _slicedToArray from\"D:\\\\MERN-APP\\\\firstapp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import{useState}from\"react\";import{useForm}from\"react-hook-form\";import{Form,Button,Container}from\"react-bootstrap\";import axios from\"axios\";import{useNavigate}from\"react-router-dom\";import{FaSignInAlt}from'react-icons/fa';import{MdLogin}from\"react-icons/md\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Signup(){var _useForm=useForm(),register=_useForm.register,handleSubmit=_useForm.handleSubmit,errors=_useForm.formState.errors;//state for image\nvar _useState=useState(null),_useState2=_slicedToArray(_useState,2),img=_useState2[0],setImg=_useState2[1];//on image select\nvar onImageSelect=function onImageSelect(event){setImg(event.target.files[0]);// setFile(event.target.files[0])\n//console.log(event.target.files[0]);\n//  console.log(event);\n};var navigate=useNavigate();var onFormSubmit=function onFormSubmit(userObj){//create FormData object\nvar formData=new FormData();//append values to it\nformData.append(\"userObj\",JSON.stringify(userObj));formData.append(\"photo\",img);//http post req\naxios.post(\"http://localhost:4000/user-api/create-user\",formData).then(function(response){alert(response.data.message);//if user created\nif(response.data.message===\"New User created\"){//navigate to login\nnavigate(\"/login\");}}).catch(function(error){console.log(error);alert(\"Something went wrong in creating user\");});};return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"display-2 text-center text-info\",children:\"Signup\"}),/*#__PURE__*/_jsx(\"div\",{className:\"row  \",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-12 col-sm-8 col-md-6  mx-auto\",children:/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit(onFormSubmit),children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Username\"}),/*#__PURE__*/_jsx(Form.Control,_objectSpread({type:\"text\",placeholder:\"Enter Username\"},register(\"username\",{required:true}))),errors.username&&/*#__PURE__*/_jsx(\"p\",{className:\"text-danger\",children:\"* Username is required\"})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Password\"}),/*#__PURE__*/_jsx(Form.Control,_objectSpread({type:\"password\",placeholder:\"Enter Password\"},register(\"password\",{required:true}))),errors.password&&/*#__PURE__*/_jsx(\"p\",{className:\"text-danger\",children:\"* Password is required\"})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Email\"}),/*#__PURE__*/_jsx(Form.Control,_objectSpread({type:\"text\",placeholder:\"Enter email\"},register(\"email\",{required:true}))),errors.email&&/*#__PURE__*/_jsx(\"p\",{className:\"text-danger\",children:\"* Email is required\"})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"City\"}),/*#__PURE__*/_jsx(Form.Control,_objectSpread({type:\"text\",placeholder:\"Enter city\"},register(\"city\",{required:true}))),errors.city&&/*#__PURE__*/_jsx(\"p\",{className:\"text-danger\",children:\"* City is required\"})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Select image\"}),/*#__PURE__*/_jsx(Form.Control,_objectSpread(_objectSpread({type:\"file\"},register(\"photo\",{required:true})),{},{onChange:function onChange(event){return onImageSelect(event);}})),errors.photo&&/*#__PURE__*/_jsx(\"p\",{className:\"text-danger\",children:\"* Profile image is required\"})]}),/*#__PURE__*/_jsxs(Button,{variant:\"primary\",type:\"submit\",children:[\"Signup \",/*#__PURE__*/_jsx(MdLogin,{})]})]})})})]});}export default Signup;","map":{"version":3,"sources":["D:/MERN-APP/firstapp/src/components/Signup.js"],"names":["useState","useForm","Form","Button","Container","axios","useNavigate","FaSignInAlt","MdLogin","Signup","register","handleSubmit","errors","formState","img","setImg","onImageSelect","event","target","files","navigate","onFormSubmit","userObj","formData","FormData","append","JSON","stringify","post","then","response","alert","data","message","catch","error","console","log","required","username","password","email","city","photo"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Form, Button, Container } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {FaSignInAlt} from 'react-icons/fa'\r\nimport { MdLogin } from \"react-icons/md\";\r\nfunction Signup()\r\n{\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n      } = useForm();\r\n    \r\n      //state for image\r\n      let [img, setImg] = useState(null);\r\n    \r\n      //on image select\r\n      const onImageSelect = (event) => {\r\n        \r\n        setImg(event.target.files[0]);\r\n        // setFile(event.target.files[0])\r\n        //console.log(event.target.files[0]);\r\n      //  console.log(event);\r\n      };\r\n    \r\n      const navigate = useNavigate();\r\n    \r\n      const onFormSubmit = (userObj) => {\r\n        //create FormData object\r\n        let formData = new FormData();\r\n        //append values to it\r\n        formData.append(\"userObj\", JSON.stringify(userObj));\r\n        formData.append(\"photo\", img);\r\n        //http post req\r\n        axios\r\n          .post(\"http://localhost:4000/user-api/create-user\", formData)\r\n          .then((response) => {\r\n            alert(response.data.message);\r\n            //if user created\r\n            if (response.data.message === \"New User created\") {\r\n              //navigate to login\r\n              navigate(\"/login\");\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n            alert(\"Something went wrong in creating user\");\r\n          });\r\n      };\r\n    \r\n      return (\r\n        <Container>\r\n          <div className=\"display-2 text-center text-info\">Signup</div>\r\n          <div className=\"row  \">\r\n            <div className=\"col-12 col-sm-8 col-md-6  mx-auto\">\r\n              <Form onSubmit={handleSubmit(onFormSubmit)}>\r\n                {/* username */}\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Username</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Username\"\r\n                    {...register(\"username\", { required: true })}\r\n                  />\r\n                  {/* validation error message for username */}\r\n                  {errors.username && (\r\n                    <p className=\"text-danger\">* Username is required</p>\r\n                  )}\r\n                </Form.Group>\r\n    \r\n                {/* password */}\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Enter Password\"\r\n                    {...register(\"password\", { required: true })}\r\n                  />\r\n                  {/* validation error message for password */}\r\n                  {errors.password && (\r\n                    <p className=\"text-danger\">* Password is required</p>\r\n                  )}\r\n                </Form.Group>\r\n    \r\n                {/* email */}\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Email</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter email\"\r\n                    {...register(\"email\", { required: true })}\r\n                  />\r\n                  {/* validation error message for password */}\r\n                  {errors.email && (\r\n                    <p className=\"text-danger\">* Email is required</p>\r\n                  )}\r\n                </Form.Group>\r\n    \r\n                {/* city */}\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>City</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter city\"\r\n                    {...register(\"city\", { required: true })}\r\n                  />\r\n                  {/* validation error message for password */}\r\n                  {errors.city && <p className=\"text-danger\">* City is required</p>}\r\n                </Form.Group>\r\n    \r\n                {/* profile image */}\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Select image</Form.Label>\r\n                  <Form.Control\r\n                    type=\"file\"\r\n                    {...register(\"photo\", { required: true })}\r\n                    onChange={(event) => onImageSelect(event)}\r\n                  />\r\n                  {/* validation error message for password */}\r\n                  {errors.photo && (\r\n                    <p className=\"text-danger\">* Profile image is required</p>\r\n                  )}\r\n                </Form.Group>\r\n    \r\n                <Button variant=\"primary\" type=\"submit\">\r\n                  Signup <MdLogin />\r\n                </Button>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      );\r\n    \r\n}\r\nexport default Signup"]},"metadata":{},"sourceType":"module"}