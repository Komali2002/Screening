{"ast":null,"code":"var _jsxFileName = \"D:\\\\React apps\\\\firstapp\\\\src\\\\components\\\\Addtodo.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Addtodo() {\n  _s();\n\n  var _errors$todo;\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const [todos, setTodos] = useState([]);\n\n  const onFormSubmit = todoObj => {\n    setTodos([...todos, todoObj.todo]);\n  };\n\n  const removeElement = index => {\n    var array = todos;\n    array.splice(index, 1);\n    setTodos([...array]);\n    console.log(todos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row row-11 row-sm-10 pt-3 pl-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onFormSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"todo\",\n          className: \"mb-3\",\n          children: \"Enter a task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"todo\",\n          className: \"form-control\",\n          ...register(\"todo\", {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), ((_errors$todo = errors.todo) === null || _errors$todo === void 0 ? void 0 : _errors$todo.type) === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger\",\n          children: \"*Task is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 58\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-info w-50\",\n        type: \"submit\",\n        children: \"Add todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"display-4 text-center\",\n        children: \"Todo List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-primary text-center\",\n        onClick: () => {\n          removeElement(index);\n        },\n        children: todo\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Addtodo, \"wRT3dxYamp3CJfsw1/OwZcfHuQo=\", false, function () {\n  return [useForm];\n});\n\n_c = Addtodo;\nexport default Addtodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Addtodo\");","map":{"version":3,"sources":["D:/React apps/firstapp/src/components/Addtodo.js"],"names":["useState","useForm","Addtodo","register","handleSubmit","formState","errors","todos","setTodos","onFormSubmit","todoObj","todo","removeElement","index","array","splice","console","log","required","type","map"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,OAAT,QAAwB,iBAAxB;;;AAEA,SAASC,OAAT,GAAkB;AAAA;;AAAA;;AAEd,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAArC,MAAoDL,OAAO,EAAjE;AACA,QAAK,CAACM,KAAD,EAAOC,QAAP,IAAiBR,QAAQ,CAAC,EAAD,CAA9B;;AACA,QAAMS,YAAY,GAAIC,OAAD,IAAa;AAC9BF,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAUG,OAAO,CAACC,IAAlB,CAAD,CAAR;AAEH,GAHD;;AAIA,QAAMC,aAAa,GAAEC,KAAD,IACpB;AACI,QAAIC,KAAK,GAACP,KAAV;AACAO,IAAAA,KAAK,CAACC,MAAN,CAAaF,KAAb,EAAmB,CAAnB;AACAL,IAAAA,QAAQ,CAAC,CAAC,GAAGM,KAAJ,CAAD,CAAR;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACH,GAND;;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA,4BAEI;AAAM,MAAA,QAAQ,EAAEH,YAAY,CAACK,YAAD,CAA5B;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,MAAf;AAAsB,UAAA,SAAS,EAAC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,EAAE,EAAC,MAAtB;AAA6B,UAAA,SAAS,EAAC,cAAvC;AAAA,aAA0DN,QAAQ,CAAC,MAAD,EAAS;AAAEe,YAAAA,QAAQ,EAAE;AAAZ,WAAT;AAAlE;AAAA;AAAA;AAAA;AAAA,gBAJJ,EAMK,iBAAAZ,MAAM,CAACK,IAAP,8DAAaQ,IAAb,MAAsB,UAAtB,iBAAoC;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANzC;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eASI;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAsC,QAAA,IAAI,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAaI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKZ,KAAK,CAACa,GAAN,CAAU,CAACT,IAAD,EAAME,KAAN,kBACP;AAAI,QAAA,SAAS,EAAC,0BAAd;AAAyC,QAAA,OAAO,EAAE,MAAI;AAACD,UAAAA,aAAa,CAACC,KAAD,CAAb;AAAsB,SAA7E;AAAA,kBAA4FF;AAA5F,SAAoFE,KAApF;AAAA;AAAA;AAAA;AAAA,cADH,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH;;GA3CQX,O;UAEqDD,O;;;KAFrDC,O;AA6CT,eAAeA,OAAf","sourcesContent":["import { useState } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\n\r\nfunction Addtodo(){\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm()\r\n    const[todos,setTodos]=useState([]);\r\n    const onFormSubmit = (todoObj) => {\r\n        setTodos([...todos,todoObj.todo]);\r\n\r\n    };\r\n    const removeElement=(index)=>\r\n    {\r\n        var array=todos;\r\n        array.splice(index,1);\r\n        setTodos([...array]);\r\n        console.log(todos);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"row row-11 row-sm-10 pt-3 pl-5\">\r\n           \r\n            <form onSubmit={handleSubmit(onFormSubmit)}>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"todo\" className=\"mb-3\" >\r\n                        Enter a task\r\n                    </label>\r\n                    <input type=\"text\" id=\"todo\" className=\"form-control\" {...register(\"todo\", { required: true })} />\r\n                    {/* validation erro msg for todo */}\r\n                    {errors.todo?.type === 'required' && <p className='text-danger'>*Task is required</p>}\r\n                </div>\r\n                <button className=\"btn btn-info w-50\" type=\"submit\">Add todo</button>\r\n            </form>\r\n            <div className=\"mt-5\">\r\n                <p className=\"display-4 text-center\">Todo List</p>\r\n                {todos.map((todo,index)=>(\r\n                    <h3 className=\"text-primary text-center\" onClick={()=>{removeElement(index);}} key={index}>{todo}</h3>\r\n                ))}\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Addtodo"]},"metadata":{},"sourceType":"module"}